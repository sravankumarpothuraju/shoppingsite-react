{"ast":null,"code":"import _slicedToArray from \"/Users/sravankumar/react/shoppingsite-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sravankumar/react/shoppingsite-react/src/components/App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport \"../App.css\";\nimport AddProduct from \"./AddProduct\";\nimport ProductsList from \"./ProductsList\";\nimport SingleProduct from \"./SingleProduct\";\nimport Cart from './Cart.js';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cart = _useState4[0],\n        setCart = _useState4[1];\n\n  const addProduct = product => {\n    setProducts([...products, product]);\n  };\n\n  const deleteProduct = index => {\n    let updatedProducts = [...products];\n    updatedProducts = updatedProducts.slice(0, index).concat(updatedProducts.slice(index + 1, updatedProducts.length));\n    setProducts(updatedProducts);\n  };\n\n  const addToCart = ({\n    product,\n    quantity\n  }) => {\n    const index = cart.findIndex(itemInCart => itemInCart.product.slug === product.slug);\n    let newCart = [];\n\n    if (index === -1) {\n      //not existing\n      newCart = [...cart, {\n        product,\n        quantity\n      }];\n    } else {\n      quantity += cart[index].quantity;\n      newCart = cart.filter(item => item.product.slug !== product.slug).concat({\n        product,\n        quantity\n      });\n    }\n\n    setCart(newCart);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Products\"), React.createElement(Link, {\n    to: `/add-product`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Add product\")), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    cart: cart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: ({\n      history\n    }) => React.createElement(ProductsList, {\n      products: products,\n      deleteProduct: deleteProduct,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/add-product\",\n    render: ({\n      history\n    }) => React.createElement(AddProduct, {\n      addProduct: addProduct,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/product/:slug\",\n    render: ({\n      match\n    }) => React.createElement(SingleProduct, {\n      product: products.find(p => p.slug === match.params.slug),\n      addToCart: addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sravankumar/react/shoppingsite-react/src/components/App.js"],"names":["React","useState","BrowserRouter","Router","Link","Route","AddProduct","ProductsList","SingleProduct","Cart","App","products","setProducts","cart","setCart","addProduct","product","deleteProduct","index","updatedProducts","slice","concat","length","addToCart","quantity","findIndex","itemInCart","slug","newCart","filter","item","history","match","find","p","params"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\n\n\nimport \"../App.css\";\n\nimport AddProduct from \"./AddProduct\";\nimport ProductsList from \"./ProductsList\";\nimport SingleProduct from \"./SingleProduct\";\nimport Cart from './Cart.js'\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n\n  const addProduct = product => {\n    setProducts([...products, product]);\n  };\n\n  const deleteProduct = index => {\n    let updatedProducts = [...products];\n    updatedProducts = updatedProducts\n      .slice(0, index)\n      .concat(updatedProducts.slice(index + 1, updatedProducts.length));\n    setProducts(updatedProducts);\n  };\n\n  const addToCart = ({ product, quantity }) => {\n    const index = cart.findIndex(\n        itemInCart => itemInCart.product.slug === product.slug\n    )\n\n    let newCart = [];\n\n    if(index ===-1) {\n      //not existing\n      newCart = [...cart, {product,quantity }]\n\n    } else {\n      quantity += cart[index].quantity\n      newCart = cart\n          .filter(item =>item.product.slug!==product.slug)\n          .concat({product, quantity})\n    }\n    setCart(newCart);\n\n  };\n\n  return (\n    <Router>\n      <div id=\"app\">\n        <aside>\n          <Link to={`/`}>Products</Link>\n          <Link to={`/add-product`}>Add product</Link>\n        </aside>\n\n        <main>\n          <Cart cart={cart}/>\n          <Route\n            exact\n            path=\"/\"\n            render={({ history }) => (\n              <ProductsList\n                products={products}\n                deleteProduct={deleteProduct}\n                history={history}\n              />\n            )}\n          />\n          <Route\n            path=\"/add-product\"\n            render={({ history }) => (\n              <AddProduct addProduct={addProduct} history={history} />\n            )}\n          />\n          <Route\n            path=\"/product/:slug\"\n            render={({ match }) => (\n              <SingleProduct\n                product={products.find(p => p.slug === match.params.slug)}\n                addToCart={addToCart}\n              />\n            )}\n          />\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}